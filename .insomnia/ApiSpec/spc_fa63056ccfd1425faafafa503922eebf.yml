_id: spc_fa63056ccfd1425faafafa503922eebf
type: ApiSpec
parentId: wrk_bdf58e2df63540b5a7b0d0d52743afdd
modified: 1667740381000
created: 1664879357370
fileName: UserBalanceWorker
contents: >
  openapi: 3.0.3

  info:
    title: User Balance Worker - OpenAPI 3.0
    description: |-
      Some useful links:
        - [The UserBalanceWorker repository](https://github.com/andrew55516/UsersBalanceWorker)

    contact: 
      email: aksenovandrey4@gmail.com
    version: '1.0'
  servers:
    - url: http://localhost:8080
  tags:
    - name: worker
      description: Nice worker, I guess :)
  paths:
    /credit:
      post:
        tags: 
          - worker
        summary: Refill users balance
        description: Refill users balance by ID, creates user with given username if user with this ID doesn't exist
        requestBody: 
          content: 
            applicatioin/json:
              schema:
                $ref: '#/components/schemas/credit'
          required: true
        responses: 
          '200':
            description: Successful operation
            content: 
              application/json:
                schema:
                  properties:
                    msg:
                      type: string
                      enum: 
                        - 'ok'
          '400':
            description: Bad request
            content: 
              application/json:
                schema: 
                  $ref: '#/components/schemas/msg400'
          '500':
            description: Internal error
            content: 
              application/json:
                schema: 
                  $ref: '#/components/schemas/msg500'

    /balance:
      post:
        tags: 
          - worker
        summary: Provides users balance
        description: Provides users balance by Id, if user doesn't exist returns 0
        requestBody: 
          content: 
            applicatioin/json:
              schema:
                $ref: '#/components/schemas/balance'
          required: true
        responses: 
          '200':
            description: Successful operation
            content: 
              application/json:
                schema:
                  properties:
                    msg:
                      type: string
                      enum: 
                        - 'ok'
                    balance:
                      type: number
                      format: float
          '400':
            description: Bad request
            content: 
              application/json:
                schema: 
                  $ref: '#/components/schemas/msg400'
          '500':
            description: Internal error
            content: 
              application/json:
                schema: 
                  $ref: '#/components/schemas/msg500'

    /service:
      post:
        tags: 
          - worker
        summary: Reserve money for some order
        description: Reserve money for some order with given order ID on Internal Wallet
        requestBody: 
          content: 
            applicatioin/json:
              schema:
                $ref: '#/components/schemas/service'
          required: true
        responses: 
          '200':
            description: Successful operation
            content: 
              application/json:
                schema:
                  properties:
                    msg:
                      type: string
                      enum: 
                        - 'ok'
          '400':
            description: Bad request
            content: 
              application/json:
                schema: 
                  $ref: '#/components/schemas/msg400'
          '500':
            description: Internal error
            content: 
              application/json:
                schema: 
                  $ref: '#/components/schemas/msg500'

    /orderStatus:
      post:
        tags: 
          - worker
        summary: Updates order status
        description: Updates order status by ID
        requestBody: 
          content: 
            applicatioin/json:
              schema:
                $ref: '#/components/schemas/order_status'
          required: true
        responses: 
          '200':
            description: Successful operation
            content: 
              application/json:
                schema:
                  properties:
                    msg:
                      type: string
                      enum: 
                        - 'ok'
          '400':
            description: Bad request
            content: 
              application/json:
                schema: 
                  $ref: '#/components/schemas/msg400'
          '500':
            description: Internal error
            content: 
              application/json:
                schema: 
                  $ref: '#/components/schemas/msg500'

    /transfer:
      post:
        tags: 
          - worker
        summary: Transfer money
        description: Transfer money from user to user by ID
        requestBody: 
          content: 
            applicatioin/json:
              schema:
                $ref: '#/components/schemas/transfer'
          required: true
        responses: 
          '200':
            description: Successful operation
            content: 
              application/json:
                schema:
                  properties:
                    msg:
                      type: string
                      enum: 
                        - 'ok'
          '400':
            description: Bad request
            content: 
              application/json:
                schema: 
                  $ref: '#/components/schemas/msg400'
          '500':
            description: Internal error
            content: 
              application/json:
                schema: 
                  $ref: '#/components/schemas/msg500'

    /record:
      post:
        tags: 
          - worker
        summary: Provides accounting
        description: Provides acconting for given period
        requestBody: 
          content: 
            applicatioin/json:
              schema:
                $ref: '#/components/schemas/record'
          required: true
        responses: 
          '200':
            description: Successful operation
            content: 
              application/json:
                schema:
                  properties:
                    msg:
                      type: string
                      enum: 
                        - 'ok'
                    record:
                      type: string
                      example: records/record0.csv
                      description: relative path to accounting
                      
          '400':
            description: Bad request
            content: 
              application/json:
                schema: 
                  $ref: '#/components/schemas/msg400'
          '500':
            description: Internal error
            content: 
              application/json:
                schema: 
                  $ref: '#/components/schemas/msg500'
             
    /history:
      post:
        tags: 
          - worker
        summary: Provides users operations history
        description: Provides sorted users operations history by given ID, if user doesn't exist returns empty list
        requestBody: 
          content: 
            applicatioin/json:
              schema:
                $ref: '#/components/schemas/history'
          required: true
        responses: 
          '200':
            description: Successful operation
            content: 
              application/json:
                schema:
                  properties:
                    msg:
                      type: string
                      enum: 
                        - 'ok'
                    user_history:
                      type: array
                      items:
                        $ref: '#/components/schemas/operation'
                                           
          '400':
            description: Bad request
            content: 
              application/json:
                schema: 
                  $ref: '#/components/schemas/msg400'
          '500':
            description: Internal error
            content: 
              application/json:
                schema: 
                  $ref: '#/components/schemas/msg500'


                  
  components:
    schemas:
      user_id:
        type: integer
        format: int64
        example: 2
        description: must be positive not equal 1 (Internal Wallet ID)

      value:
        type: number
        format: float
        example: 999.9
        description: must be positive

      order_id:
        type: integer
        format: int64
        example: 2
        description: must be positive

      credit:
        required: 
          - user_id
          - value
        properties:
          user_id:
            $ref: '#/components/schemas/user_id'
          username:
            type: string
            example: user1
          value:
            $ref: '#/components/schemas/value'

      balance:
        required: 
          - user_id
        properties: 
          user_id:
            $ref: '#/components/schemas/user_id'
      
      service:
        required: 
          - user_id
          - service_id
          - order_id
          - cost
        properties: 
          user_id:
            $ref: '#/components/schemas/user_id'
          service_id:
            type: integer
            format: int64
            example: 1
            description: must be positive
          order_id:
            $ref: '#/components/schemas/order_id'
          cost:
            $ref: '#/components/schemas/value'

      order_status:
        required: 
          - order_id
          - status
        properties: 
          order_id:
            $ref: '#/components/schemas/order_id'
          status:
            type: string
            enum:
              - ok
              - failed
            example: ok
            
      transfer:
        required:
          - user_from_id
          - user_to_id
          - value
        properties: 
          user_from_id:
            $ref: '#/components/schemas/user_id'
          user_to_id:
            $ref: '#/components/schemas/user_id'
          value:
            $ref: '#/components/schemas/value'

      record:
        required: 
          - from
          - to
        properties: 
          from:
            type: string
            format: date
            example: 2022-11-01
          to:
            type: string
            format: date
            example: 2022-12-01

      history:
        required:
          - user_id
        properties:
          user_id:
            $ref: '#/components/schemas/user_id'
          sort_by:
            type: string
            enum: 
              - date
              - value
            default: date
            description: by this parameter users operations will be sorted
          reverse:
            type: boolean
            default: false
            description: true - in ascending order, false - in descending order

      operation:
        properties:
          value:
            type: number
            format: float
            example: -111.1
          time:
            type: string
            format: date-time
            example: 2022-11-05T15:56:57.399005+03:00
          comment:
            type: string
            example: 'payment for service: ServiceName'
         
      msg400:
        properties: 
          msg:
            type: string
            example: not enough or wrong data
              
      msg500:
        properties: 
          msg:
            type: string
            example: oh, no... terrible error, our server died
contentType: yaml
